# Copyright 2020 Adam Chalkley
#
# https://github.com/atc0005/brick
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Whether lookup errors against various files should be ignored. It is common
# to encounter lookup errors when first deploying this application, but not
# once the application has been in actual use. This setting defaults to
# `false` and assumes that a sysadmin will pre-create the files as part of the
# deployment process.
ignore_lookup_errors = false


[network]

# TCP port that this application should listen on for incoming HTTP requests.
local_tcp_port = 8000

# Local IP Address that this application should listen on for incoming HTTP requests.
local_ip_address = "localhost"

# One or many single IP Addresses which are trusted for payload submission. If
# this is defined, all other sender IPs are ignored. If this is not defined,
# payloads are accepted from all IP Addresses not otherwise rejected by
# local/remote firewall rules.
trusted_ip_addresses = ["127.0.0.1"]


[logging]

# Log message priority filter. Log messages with a lower level are ignored.
#
# Valid options include one of: fatal, error, warn, info, debug
level = "info"

# Log output is written to this output target. Valid options are one of the
# standard application outputs: stdout or stderr
output = "stdout"

# This setting controls which output format is used for log messages generated
# by this application. This value is from a smaller subset of the formats
# supported by the third-party leveled-logging package used by this
# application. Valid values include: cli, json, logfmt, text and discard
# (none).
format = "text"


[disabledusers]

# The fully-qualified path to the EZproxy include file that where this
# application should write disabled user accounts.
# file_path = "/home/ubuntu/users.brick-disabled.txt"
# file_path = "/tmp/users.brick-disabled.txt"
file_path = "/var/cache/brick/users.brick-disabled.txt"

# Desired file permissions when this file is created.
# Note: The ezproxy daemon will need to be able to read this file.
# Also note: octal with prefix `0o`
file_permissions = 0o644

# This is appended to each username as it is written to the file in order for
# EZproxy to treat the user account as ineligible to login
entry_suffix = "::deny"


[reportedusers]

# The fully-qualified path to log file where this application should log user
# disable request events for fail2ban to ingest.
# file_path = "/home/ubuntu/users.brick-reported.log"
# file_path = "/tmp/users.brick-reported.log"
file_path = "/var/log/brick/users.brick-reported.log"

# Desired file permissions when this file is created.
# Note: fail2ban will need to be able to read this file.
# Also note: octal with prefix `0o`
file_permissions = 0o644


[ignoredusers]

# Fully-qualified path to a list of user accounts that should not be banned
# by this application. Lines beginning with a '#' character are ignored.
# Leading and trailing whitespace per line is ignored.
# file_path = "/home/ubuntu/users.brick-ignored.txt"
# file_path = "/tmp/users.brick-ignored.txt"
file_path = "/usr/local/etc/brick/users.brick-ignored.txt"


[ignoredipaddresses]

# Fully-qualified path to a list of individual IP Addresses that should not be
# banned by this application. Lines beginning with a '#' character are
# ignored. Leading and trailing whitespace per line is ignored.
# file_path = "/home/ubuntu/ips.brick-ignored.txt"
# file_path = "/tmp/ips.brick-ignored.txt"
file_path = "/usr/local/etc/brick/ips.brick-ignored.txt"


[msteams]

# The full URL used to submit messages to the Teams channel. This URL is in
# the form of
#
# https://outlook.office.com/webhook/xxx or
# https://outlook.office365.com/webhook/xxx.
#
# This URL needs to be created in advance by adding/configuring a Webhook
# Connector in a Microsoft Teams channel that you wish to submit messages to
# using this application.
webhook_url = ""

# The number of seconds to wait between Microsoft Teams notification attempts.
# This rate limit is intended to help prevent unintentional abuse of remote
# services and is applied regardless of whether the last notification attempt
# was initially successful or required one or more retry attempts.
rate_limit = 5

# The number of attempts that this application will make to deliver Microsoft
# Teams messages before giving up.
retries = 2

# The number of seconds to wait between Microsoft Teams message delivery retry
# attempts.
retry_delay = 5


[email]

# The SMTP server that this application should connect to for email message
# delivery. Specify localhost if testing or sending mail via a local SMTP
# server instance. Examples include running a Postfix null client which sends
# all mail to a relayhost on the local network or a Maildev Docker container
# for development purposes.
# server = "localhost"
server = ""

# The TCP port that this application should connect to for email message
# delivery. If using a Maildev Docker container for testing you may want to
# try 1025 as the port.
# port = 1025
port = 25

# Default SMTP connections are unauthenticated. The hope is to extend email
# notification functionality in the future with support for standard
# authentication mechanisms.
#
# username = ""
# password = ""

# The hostname provided with the HELO or EHLO greeting to the SMTP server. If
# left blank, the default is used. Many SMTP servers will require that the
# hostname be provided in a FQDN format. Those same SMTP servers may equally
# require that both forward and reverse DNS lookups for this provided value
# resolve properly.
# client_identity = "localhost"
# client_identity = "ezproxy.example.com"
client_identity = "brick"

# The email address to use as the sender on all outgoing emails.
sender_address = "brick@example.org"

# The list of email addresses (one or many) to receive notifications from this
# application.
# recipient_emails = [
#     "help@example.org",
#     "devteam@example.org",
#     "sysadmins@example.org",
# ]
recipient_addresses = ["help@example.org"]

# The number of seconds to wait between email notification attempts. This rate
# limit is intended to help prevent unintentional abuse of remote services and
# is applied regardless of whether the last notification attempt was initially
# successful or required one or more retry attempts.
rate_limit = 3

# The number of attempts that this application will make to deliver email
# messages before giving up.
retries = 2

# The number of seconds to wait between email message delivery attempts.
retry_delay = 2


[ezproxy]

# Fully-qualified path to the EZproxy executable/binary. This is the same
# executable that starts at boot. This file is usually named 'ezproxy'.
executable_path = "/usr/local/ezproxy/ezproxy"

# The fully-qualified path to the Active Users and Hosts "state" file used by
# EZproxy (and this application) to track current sessions and hosts managed
# by EZproxy.
active_file_path = "/usr/local/ezproxy/ezproxy.hst"

# The path to the directory containing the EZproxy audit files. The assumption
# is made that all files within are based on YYYYMMDD.txt pattern. Any other
# file pattern found within this path is ignored (e.g, .zip or .tar or whatnot
# for a one-off quick backup made by a sysadmin of a specific file).
audit_file_dir_path = "/usr/local/ezproxy/audit"

# The number of retries allowed for the audit log and active files before the
# application accepts that "cannot find matching session IDs for specific
# user" is really the truth of it and not a race condition between this
# application and the EZproxy application (e.g., EZproxy accepts a login, but
# delays writing the state information for about 2 seconds to keep from
# hammering the storage device).
search_retries = 7

# The delay in seconds between searches of the audit log or active file for a
# specified username. This is an attempt to work around race conditions
# between EZproxy updating its state file (which has been observed to have a
# delay of up to several seconds) and this application *reading* the active
# file. This delay is applied to the initial search and each subsequent
# retried search for the provided username.
search_delay = 1

# Whether session termination support is enabled.
#
# If false, session termination will not be initiated by this application,
# though current session IDs found as part of preparing for termination will
# still be logged for troubleshooting purposes.
#
# If setting (or leaving) this as false, the assumption is that either no
# handling of reported users is desired (other than perhaps logging and
# notification) or that a tool such as fail2ban is used to monitor the
# reported users log file and temporarily block the source IP in order to
# force session timeout.
terminate_sessions = false
